{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 resolution;\nuniform float currentTime;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nfloat FLT_flutter_local_signedDistanceSphere(vec3 p, float size, vec3 position)\n{\n    return length(p - position) - size;\n}\n\nfloat FLT_flutter_local_signedDistanceOctahedron(inout vec3 p, float size, vec3 position)\n{\n    p = abs(p - position);\n    return (((p.x + p.y) + p.z) - size) * 0.57735025882720947265625;\n}\n\nfloat FLT_flutter_local_computeUnion(float a, float b, float smoothing)\n{\n    float h = clamp(0.5 + ((0.5 * (b - a)) / smoothing), 0.0, 1.0);\n    return mix(b, a, h) - ((smoothing * h) * (1.0 - h));\n}\n\nfloat FLT_flutter_local_map(vec3 p)\n{\n    vec3 q = p;\n    vec2 _115 = p.xy - vec2(0.5 * cos(currentTime / 1000.0), 0.5 * sin(currentTime / 1000.0));\n    q.x = _115.x;\n    q.y = _115.y;\n    vec3 param = q;\n    float param_1 = 0.5;\n    vec3 param_2 = vec3(0.0);\n    vec3 param_3 = p;\n    float param_4 = 0.5;\n    vec3 param_5 = vec3(0.0);\n    float _130 = FLT_flutter_local_signedDistanceOctahedron(param_3, param_4, param_5);\n    float param_6 = FLT_flutter_local_signedDistanceSphere(param, param_1, param_2);\n    float param_7 = _130;\n    float param_8 = 0.100000001490116119384765625;\n    return FLT_flutter_local_computeUnion(param_6, param_7, param_8);\n}\n\nvoid FLT_main()\n{\n    float dx = 0.05859375;\n    float dy = 0.0390625;\n    vec2 uv = ((FLT_flutter_local_FlutterFragCoord() * 2.0) - resolution) / vec2(resolution.y);\n    uv = vec2(uv.x, -uv.y);\n    vec2 pixelFactor = resolution * 0.0320000015199184417724609375;\n    uv = floor((uv * pixelFactor) + vec2(0.5)) / pixelFactor;\n    vec3 rayOrigin = vec3(uv, -1.0);\n    vec3 rayDirection = vec3(0.0, 0.0, 1.0);\n    vec3 color = vec3(0.0);\n    float distanceTraveled = 0.0;\n    for (int i = 0; i < 80; i++)\n    {\n        vec3 p_1 = rayOrigin + (rayDirection * distanceTraveled);\n        vec3 param_9 = p_1;\n        float d = FLT_flutter_local_map(param_9);\n        distanceTraveled += d;\n        if ((d < 0.001000000047497451305389404296875) || (distanceTraveled > 100.0))\n        {\n            break;\n        }\n    }\n    color = vec3(distanceTraveled * 0.75);\n    fragColor = vec4(vec3(1.0) - color, float((distanceTraveled > 100.0) ? 0 : 1));\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "resolution",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "currentTime",
      "rows": 1,
      "type": 10
    }
  ]
}